{"version":3,"sources":["components/Item.js","components/ShoppingList.js","data/items.js","components/App.js","index.js"],"names":["Item","name","category","useState","inCart","setInCart","isInCart","setIsInCart","cartname","cartClass","className","onClick","ShoppingList","items","selectedCategory","setSelectedCategory","onChange","event","target","value","map","item","id","App","theme","setTheme","appClass","itemData","ReactDOM","render","document","getElementById"],"mappings":"0MAsBeA,MApBf,YAAmC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAAY,EACNC,oBAAS,GADH,mBAC3BC,EAD2B,KACnBC,EADmB,OAEFF,oBAAS,GAFP,mBAE3BG,EAF2B,KAEjBC,EAFiB,KAQ1BC,EAAWJ,EAAS,mBAAqB,cACzCK,EAAYL,EAAS,UAAY,GAEvC,OACE,qBAAIM,UAAWD,EAAf,UACE,+BAAOR,IACP,sBAAMS,UAAU,WAAhB,SAA4BR,IAC5B,wBAAQS,QAZZ,WACEN,GAAWD,GACXG,GAAaD,IAU6BI,UAAU,MAAlD,SAAyDF,QCoBhDI,MAhCf,YAAkC,IAAVC,EAAS,EAATA,MAAS,EACiBV,mBAAS,OAD1B,mBACxBW,EADwB,KACNC,EADM,KAI/B,OACE,sBAAKL,UAAU,eAAf,UACE,qBAAKA,UAAU,SAAf,SACE,yBACEM,SAAU,SAACC,GACTF,EAAoBE,EAAMC,OAAOC,QAEnCA,MAAOL,EACPb,KAAK,SALP,UAOE,wBAAQkB,MAAM,MAAd,gCACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,0BAGJ,oBAAIT,UAAU,QAAd,SACGG,EAAMO,KAAI,SAACC,GAAD,MACY,QAArBP,GAA8BO,EAAKnB,WAAaY,EAEhD,cAAC,EAAD,CAAoBb,KAAMoB,EAAKpB,KAAMC,SAAUmB,EAAKnB,UAAzCmB,EAAKC,IAAoD,cCrB/DT,EARD,CACZ,CAAES,GAAI,EAAGrB,KAAM,SAAUC,SAAU,SACnC,CAAEoB,GAAI,EAAGrB,KAAM,cAAeC,SAAU,WACxC,CAAEoB,GAAI,EAAGrB,KAAM,UAAWC,SAAU,WACpC,CAAEoB,GAAI,EAAGrB,KAAM,gBAAiBC,SAAU,SAC1C,CAAEoB,GAAI,EAAGrB,KAAM,UAAWC,SAAU,YCsBvBqB,MArBf,WAAgB,IAAD,EACcpB,oBAAS,GADvB,mBACNqB,EADM,KACEC,EADF,KAMPC,EAAWF,EAAQ,WAAa,YAEtC,OACE,sBAAKd,UAAWgB,EAAhB,UACE,mCACE,0CACA,wBAAQf,QAAU,WAChBc,GAAUD,IADZ,0BAIF,cAAC,EAAD,CAAcX,MAAOc,Q,MCjB3BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.506818bd.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nfunction Item({ name, category }) {\nconst [inCart, setInCart] = useState(false)\nconst [isInCart, setIsInCart] = useState(false)\n  function handleAddToCartClick() {\n    setInCart(!inCart)\n    setIsInCart(!isInCart)\n\n  }\n  const cartname = inCart ? \"Remove from Cart\" : \"Add to Cart\";\n  const cartClass = inCart ? \"in-cart\" : \"\";\n\n  return (\n    <li className={cartClass}>\n      <span>{name}</span>\n      <span className=\"category\">{category}</span>\n      <button onClick={ handleAddToCartClick} className=\"add\">{cartname}</button>\n    </li>\n  );\n}\n\nexport default Item;","\n\nimport React, { useState } from \"react\";\nimport Item from \"./Item\";\n\nfunction ShoppingList({ items }) {\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n \n\n  return (\n    <div className=\"ShoppingList\">\n      <div className=\"Filter\">\n        <select\n          onChange={(event) => {\n            setSelectedCategory(event.target.value);\n          }}\n          value={selectedCategory}\n          name=\"filter\"\n        >\n          <option value=\"All\">Filter by category</option>\n          <option value=\"Produce\">Produce</option>\n          <option value=\"Dairy\">Dairy</option>\n          <option value=\"Dessert\">Dessert</option>\n        </select>\n      </div>\n      <ul className=\"Items\">\n        {items.map((item) => ( \n          selectedCategory === \"All\" || item.category === selectedCategory ? (\n          \n          <Item key={item.id} name={item.name} category={item.category} />) : null\n        ))}\n        \n      </ul>\n    </div>\n  );\n}\n\nexport default ShoppingList;\n","const items = [\n  { id: 1, name: \"Yogurt\", category: \"Dairy\" },\n  { id: 2, name: \"Pomegranate\", category: \"Produce\" },\n  { id: 3, name: \"Lettuce\", category: \"Produce\" },\n  { id: 4, name: \"String Cheese\", category: \"Dairy\" },\n  { id: 5, name: \"Cookies\", category: \"Dessert\" },\n];\n\nexport default items;\n","\n\nimport React, {useState} from \"react\";\nimport ShoppingList from \"./ShoppingList\";\nimport itemData from \"../data/items\";\n\nfunction App() {\n  const [theme , setTheme] = useState(false)\n\n\n  // replace 'false' with a state variable that can be toggled between true and false\n  // this will be used for the Dark Mode Toggle feature\n  const appClass = theme ? \"App dark\" : \"App light\"\n\n  return (\n    <div className={appClass}>\n      <header>\n        <h2>Shopster</h2>\n        <button onClick ={()=>{\n          setTheme(!theme)\n        }}>Dark Mode</button>\n      </header>\n      <ShoppingList items={itemData} />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}